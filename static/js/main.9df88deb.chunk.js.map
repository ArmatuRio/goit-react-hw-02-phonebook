{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/contactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleFormSubmit","preventDefault","props","onSubmit","reset","className","styles","form","this","type","pattern","title","required","onChange","Component","Filter","input","ContactList","contactList","onDeleteContact","map","id","item","button","onClick","App","contacts","filter","addContact","newContacts","uuidv4","contact","includes","alert","prevState","deleteContact","contactId","filterContactsHandler","getFilteredContacts","normalizedFilter","toLowerCase","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9df88deb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","import { Component } from 'react';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleFormSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","import styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onChange, value }) => (\n  <label>\n    Find contacts by name\n    <input className={styles.input} onChange={onChange} value={value} />\n  </label>\n);\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styles from './contactList.module.css';\n\nconst ContactList = ({ contactList, onDeleteContact }) => {\n  return (\n    <ol>\n      {contactList.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          <b>{name}: </b>\n          <span>{number}</span>\n          <button className={styles.button} onClick={() => onDeleteContact(id)}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nContactList.propTypes = {\n  contactList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import { Component } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const newContacts = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    const currentContacts = this.state.contacts.map(contact => contact.name);\n\n    if (currentContacts.includes(newContacts.name)) {\n      alert(`${newContacts.name} is alredy in contacts!`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  filterContactsHandler = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter\n          onChange={this.filterContactsHandler}\n          value={this.state.filter}\n        />\n        <ContactList\n          contactList={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactList_item__1Zfmy\",\"button\":\"contactList_button__18MOL\"};"],"sourceRoot":""}